import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class Registration extends javax.swing.JFrame {
    
    private Client client;
    private Authorization auth;

    public Registration(Client pClient, Authorization pAuth) {
        client = pClient;
        auth = pAuth;
        initComponents();
        this.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        regLoginField = new javax.swing.JTextField();
        regLoginLabel = new javax.swing.JLabel();
        regPasswordLabel = new javax.swing.JLabel();
        regPasswordField = new javax.swing.JPasswordField();
        regButton = new javax.swing.JButton();
        regPasswordDubLabel = new javax.swing.JLabel();
        regPasswordDubField = new javax.swing.JPasswordField();
        regLabel = new javax.swing.JLabel();
        regNameLabel = new javax.swing.JLabel();
        regNameField = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();
        authLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Регистрация");
        setLocation(new java.awt.Point(550, 200));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        regLoginField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        regLoginField.setMaximumSize(new java.awt.Dimension(100, 30));
        regLoginField.setMinimumSize(new java.awt.Dimension(100, 30));
        regLoginField.setPreferredSize(new java.awt.Dimension(100, 30));
        regLoginField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regLoginFieldActionPerformed(evt);
            }
        });
        jPanel1.add(regLoginField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 160, -1));

        regLoginLabel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        regLoginLabel.setText("Логин");
        jPanel1.add(regLoginLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, -1, -1));

        regPasswordLabel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        regPasswordLabel.setText("Пароль");
        jPanel1.add(regPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, -1, -1));

        regPasswordField.setMaximumSize(new java.awt.Dimension(100, 30));
        regPasswordField.setMinimumSize(new java.awt.Dimension(100, 30));
        regPasswordField.setPreferredSize(new java.awt.Dimension(100, 30));
        regPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regPasswordFieldActionPerformed(evt);
            }
        });
        jPanel1.add(regPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 160, -1));

        regButton.setBackground(new java.awt.Color(204, 255, 204));
        regButton.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        regButton.setText("Регистрация");
        regButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        regButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regButtonActionPerformed(evt);
            }
        });
        jPanel1.add(regButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 130, 40));

        regPasswordDubLabel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        regPasswordDubLabel.setText("Повтор пароля");
        jPanel1.add(regPasswordDubLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, -1, -1));

        regPasswordDubField.setMaximumSize(new java.awt.Dimension(100, 30));
        regPasswordDubField.setMinimumSize(new java.awt.Dimension(100, 30));
        regPasswordDubField.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel1.add(regPasswordDubField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 250, 160, -1));

        regLabel.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        regLabel.setText("РЕГИСТРАЦИЯ");
        jPanel1.add(regLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, -1));

        regNameLabel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        regNameLabel.setText("Имя");
        jPanel1.add(regNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, -1, -1));

        regNameField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        regNameField.setMaximumSize(new java.awt.Dimension(100, 30));
        regNameField.setMinimumSize(new java.awt.Dimension(100, 30));
        regNameField.setPreferredSize(new java.awt.Dimension(100, 30));
        regNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regNameFieldActionPerformed(evt);
            }
        });
        jPanel1.add(regNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 160, -1));

        backButton.setBackground(new java.awt.Color(204, 204, 255));
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/back.png"))); // NOI18N
        backButton.setBorder(null);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 40, 40));

        authLabel.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        authLabel.setText("ВХОД");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(160, 160, 160)
                            .addComponent(authLabel)))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(authLabel)))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void regLoginFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regLoginFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regLoginFieldActionPerformed

    private void regPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regPasswordFieldActionPerformed

    private void regButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regButtonActionPerformed
        String pasw1 = new String(regPasswordField.getPassword());
        String pasw2 = new String(regPasswordDubField.getPassword());
        
        //Пароль и повтор пароля совпали
        if (pasw1.compareTo(pasw2) == 0) {
            //Запрос на регистрацию, отправляем логин, юзернейм, хэш пароля
            String request = new String(regLoginField.getText() + "/" + regNameField.getText() + "/" + getHashedPassword());
            client.Post("register/" + request);
            System.out.println("Отправка запроса " + request);
            
            //Ответ от сервера
            String serverResponse = client.Get();
            System.out.println("serverResponse = " + serverResponse);

            //Обработка ответа сервера
            switch (serverResponse) {
                //Сервер корректно обработал запрос, новый пользователь зарегистрирован
                case "200" -> {
                    //Переход к основному окну, закрытие окна регистрации
                    User regUser = new User(regLoginField.getText(), regNameField.getText());
                    MainPage mainWindow = new MainPage(client, regUser);
                    this.setVisible(false);
                    mainWindow.setVisible(true);
                }
                //Сервер обработал запрос, пользователь уже существует
                case "404" -> {
                    Error exists = new Error("Регистрация не удалась", "Логин уже занят");
                    exists.setVisible(true);
                    regLoginField.setText("");
                    regNameField.setText("");
                    regPasswordField.setText("");
                    regPasswordDubField.setText("");
                    request = null;
                }
                //Ошибка при обработкке запроса
                case "500" -> {
                    Error error = new Error("Регистрация не удалась", "Что-то пошло не так((");
                    error.setVisible(true);
                    regLoginField.setText("");
                    regNameField.setText("");
                    regPasswordField.setText("");
                    regPasswordDubField.setText("");
                    request = null;
                }
            }          
        } else {
            //Пароль и повтор пароля не совпали
            Error difference = new Error("Пароли не совпадают", "Требуется повторить регистрацию");
            difference.setVisible(true);
            regLoginField.setText("");
            regNameField.setText("");
            regPasswordField.setText("");
            regPasswordDubField.setText("");
        }
    }//GEN-LAST:event_regButtonActionPerformed

    private void regNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regNameFieldActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.setVisible(false);
        auth.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    //Метод получения хэша пароля
    public String getHashedPassword() {
        String passw = String.copyValueOf(regPasswordField.getPassword());
        byte[] encodedhash = null;
        try {   MessageDigest digest = MessageDigest.getInstance("SHA-256");
            encodedhash = digest.digest(passw.getBytes(StandardCharsets.UTF_8));
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
        
        if (encodedhash != null) {
            StringBuffer hexString = new StringBuffer();
            
            for (int i = 0; i < encodedhash.length; i++) {
                String hex = Integer.toHexString(0xff & encodedhash[i]);
                if(hex.length() == 1) hexString.append('0');
                    hexString.append(hex);
            }
            
            return hexString.toString();
        } else
            return null;     
    }
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton regButton;
    private javax.swing.JLabel regLabel;
    private javax.swing.JTextField regLoginField;
    private javax.swing.JLabel regLoginLabel;
    private javax.swing.JTextField regNameField;
    private javax.swing.JLabel regNameLabel;
    private javax.swing.JPasswordField regPasswordDubField;
    private javax.swing.JLabel regPasswordDubLabel;
    private javax.swing.JPasswordField regPasswordField;
    private javax.swing.JLabel regPasswordLabel;
    // End of variables declaration//GEN-END:variables
}
